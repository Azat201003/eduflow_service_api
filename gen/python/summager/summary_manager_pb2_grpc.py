# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from summager import summary_manager_pb2 as summager_dot_summary__manager__pb2

GRPC_GENERATED_VERSION = '1.72.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in summager/summary_manager_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SummaryManagerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartSending = channel.unary_unary(
                '/summager.SummaryManagerService/StartSending',
                request_serializer=summager_dot_summary__manager__pb2.StartRequest.SerializeToString,
                response_deserializer=summager_dot_summary__manager__pb2.StartResponse.FromString,
                _registered_method=True)
        self.SendChunk = channel.unary_unary(
                '/summager.SummaryManagerService/SendChunk',
                request_serializer=summager_dot_summary__manager__pb2.WriteChunk.SerializeToString,
                response_deserializer=summager_dot_summary__manager__pb2.WriteResponse.FromString,
                _registered_method=True)
        self.ReadChunk = channel.unary_unary(
                '/summager.SummaryManagerService/ReadChunk',
                request_serializer=summager_dot_summary__manager__pb2.ReadRequest.SerializeToString,
                response_deserializer=summager_dot_summary__manager__pb2.GetChunk.FromString,
                _registered_method=True)
        self.CloseSending = channel.unary_unary(
                '/summager.SummaryManagerService/CloseSending',
                request_serializer=summager_dot_summary__manager__pb2.EndRequest.SerializeToString,
                response_deserializer=summager_dot_summary__manager__pb2.EndResponse.FromString,
                _registered_method=True)
        self.StartReading = channel.unary_unary(
                '/summager.SummaryManagerService/StartReading',
                request_serializer=summager_dot_summary__manager__pb2.StartRequest.SerializeToString,
                response_deserializer=summager_dot_summary__manager__pb2.StartResponse.FromString,
                _registered_method=True)


class SummaryManagerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartSending(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendChunk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadChunk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseSending(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartReading(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SummaryManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartSending': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSending,
                    request_deserializer=summager_dot_summary__manager__pb2.StartRequest.FromString,
                    response_serializer=summager_dot_summary__manager__pb2.StartResponse.SerializeToString,
            ),
            'SendChunk': grpc.unary_unary_rpc_method_handler(
                    servicer.SendChunk,
                    request_deserializer=summager_dot_summary__manager__pb2.WriteChunk.FromString,
                    response_serializer=summager_dot_summary__manager__pb2.WriteResponse.SerializeToString,
            ),
            'ReadChunk': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadChunk,
                    request_deserializer=summager_dot_summary__manager__pb2.ReadRequest.FromString,
                    response_serializer=summager_dot_summary__manager__pb2.GetChunk.SerializeToString,
            ),
            'CloseSending': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseSending,
                    request_deserializer=summager_dot_summary__manager__pb2.EndRequest.FromString,
                    response_serializer=summager_dot_summary__manager__pb2.EndResponse.SerializeToString,
            ),
            'StartReading': grpc.unary_unary_rpc_method_handler(
                    servicer.StartReading,
                    request_deserializer=summager_dot_summary__manager__pb2.StartRequest.FromString,
                    response_serializer=summager_dot_summary__manager__pb2.StartResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'summager.SummaryManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('summager.SummaryManagerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SummaryManagerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartSending(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/summager.SummaryManagerService/StartSending',
            summager_dot_summary__manager__pb2.StartRequest.SerializeToString,
            summager_dot_summary__manager__pb2.StartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendChunk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/summager.SummaryManagerService/SendChunk',
            summager_dot_summary__manager__pb2.WriteChunk.SerializeToString,
            summager_dot_summary__manager__pb2.WriteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadChunk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/summager.SummaryManagerService/ReadChunk',
            summager_dot_summary__manager__pb2.ReadRequest.SerializeToString,
            summager_dot_summary__manager__pb2.GetChunk.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CloseSending(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/summager.SummaryManagerService/CloseSending',
            summager_dot_summary__manager__pb2.EndRequest.SerializeToString,
            summager_dot_summary__manager__pb2.EndResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartReading(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/summager.SummaryManagerService/StartReading',
            summager_dot_summary__manager__pb2.StartRequest.SerializeToString,
            summager_dot_summary__manager__pb2.StartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
